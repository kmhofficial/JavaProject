/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaproject.MainUI;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import org.w3c.dom.css.RGBColor;

/**
 *
 * @author L3GEND
 */
public class posui extends javax.swing.JFrame {

    /**
     * Creates new form posui
     */
    public posui() {
        initComponents();
        imageloads();
        fetchItemsAndCreatePanels();
        this.setBackground(new Color(0.0f, 0.0f, 0.0f, 0.0f));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRound1 = new customframework.PanelRound();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        oleatolabel = new javax.swing.JLabel();
        hcoffeelabel = new javax.swing.JLabel();
        htealabel = new javax.swing.JLabel();
        hdrinklabel = new javax.swing.JLabel();
        frappuccinolabel = new javax.swing.JLabel();
        ccoffeelabel = new javax.swing.JLabel();
        itealabel = new javax.swing.JLabel();
        cdrinklabel = new javax.swing.JLabel();
        checkoutbtn = new customframework.Button();
        closebtn = new javax.swing.JLabel();
        maximizebtn = new javax.swing.JLabel();
        minimizebtn = new javax.swing.JLabel();
        searchbox = new customframework.MyTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemspanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Drinks");

        oleatolabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        oleatolabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        oleatolabel.setText("Oleato™");
        oleatolabel.setOpaque(true);
        oleatolabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                oleatolabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                oleatolabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                oleatolabelMouseExited(evt);
            }
        });

        hcoffeelabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        hcoffeelabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hcoffeelabel.setText("Hot Coffees");
        hcoffeelabel.setOpaque(true);
        hcoffeelabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hcoffeelabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hcoffeelabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hcoffeelabelMouseExited(evt);
            }
        });

        htealabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        htealabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        htealabel.setText("Hot Teas");
        htealabel.setOpaque(true);
        htealabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                htealabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                htealabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                htealabelMouseExited(evt);
            }
        });

        hdrinklabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        hdrinklabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hdrinklabel.setText("Hot Drinks");
        hdrinklabel.setOpaque(true);
        hdrinklabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hdrinklabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hdrinklabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hdrinklabelMouseExited(evt);
            }
        });

        frappuccinolabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        frappuccinolabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        frappuccinolabel.setText("Frappuccino®\nBlended Beverages"); // NOI18N
        frappuccinolabel.setAutoscrolls(true);
        frappuccinolabel.setFocusable(false);
        frappuccinolabel.setOpaque(true);
        frappuccinolabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                frappuccinolabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                frappuccinolabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                frappuccinolabelMouseExited(evt);
            }
        });

        ccoffeelabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ccoffeelabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ccoffeelabel.setText("Cold Coffees");
        ccoffeelabel.setOpaque(true);
        ccoffeelabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ccoffeelabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ccoffeelabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ccoffeelabelMouseExited(evt);
            }
        });

        itealabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        itealabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itealabel.setText("Iced Teas");
        itealabel.setOpaque(true);
        itealabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itealabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                itealabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                itealabelMouseExited(evt);
            }
        });

        cdrinklabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cdrinklabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cdrinklabel.setText("Cold Drinks");
        cdrinklabel.setOpaque(true);
        cdrinklabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cdrinklabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cdrinklabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cdrinklabelMouseExited(evt);
            }
        });

        checkoutbtn.setText("Checkout");
        checkoutbtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        checkoutbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkoutbtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(frappuccinolabel, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
            .addComponent(htealabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(hdrinklabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(hcoffeelabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(oleatolabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ccoffeelabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(itealabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(cdrinklabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(checkoutbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(oleatolabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hcoffeelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(htealabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hdrinklabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(frappuccinolabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ccoffeelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(itealabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cdrinklabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(checkoutbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        closebtn.setBackground(new java.awt.Color(255, 255, 255));
        closebtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        closebtn.setFocusable(false);
        closebtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        closebtn.setOpaque(true);
        closebtn.setPreferredSize(new java.awt.Dimension(400, 300));
        closebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closebtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closebtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closebtnMouseExited(evt);
            }
        });

        maximizebtn.setBackground(new java.awt.Color(255, 255, 255));
        maximizebtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        maximizebtn.setOpaque(true);
        maximizebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                maximizebtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                maximizebtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                maximizebtnMouseExited(evt);
            }
        });

        minimizebtn.setBackground(new java.awt.Color(255, 255, 255));
        minimizebtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimizebtn.setOpaque(true);
        minimizebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizebtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizebtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizebtnMouseExited(evt);
            }
        });

        searchbox.setHint("Search");
        searchbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchboxKeyReleased(evt);
            }
        });

        itemspanel.setLayout(new java.awt.GridLayout(0, 2, 3, 3));
        jScrollPane1.setViewportView(itemspanel);

        javax.swing.GroupLayout panelRound1Layout = new javax.swing.GroupLayout(panelRound1);
        panelRound1.setLayout(panelRound1Layout);
        panelRound1Layout.setHorizontalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound1Layout.createSequentialGroup()
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelRound1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(minimizebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maximizebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelRound1Layout.createSequentialGroup()
                        .addGap(344, 915, Short.MAX_VALUE)
                        .addComponent(searchbox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelRound1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        panelRound1Layout.setVerticalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(closebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maximizebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minimizebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelRound1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelRound1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closebtnMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closebtnMouseClicked

    private void closebtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closebtnMouseEntered
        // TODO add your handling code here:
        closebtn.setBackground(new Color(220, 0, 0, 255));

        ImageIcon closeicon = new ImageIcon(this.getClass().getResource("../icon/whiteclose.png"));
        Image logoclose = closeicon.getImage();
        Image scaleclose = logoclose.getScaledInstance(15, 15, Image.SCALE_SMOOTH);
        ImageIcon scaledclose = new ImageIcon(scaleclose);
        closebtn.setIcon(scaledclose);

    }//GEN-LAST:event_closebtnMouseEntered

    private void closebtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closebtnMouseExited
        // TODO add your handling code here:
        closebtn.setBackground(Color.WHITE);

        ImageIcon closeicon = new ImageIcon(this.getClass().getResource("../icon/close.png"));
        Image logoclose = closeicon.getImage();
        Image scaleclose = logoclose.getScaledInstance(15, 15, Image.SCALE_SMOOTH);
        ImageIcon scaledclose = new ImageIcon(scaleclose);
        closebtn.setIcon(scaledclose);
    }//GEN-LAST:event_closebtnMouseExited
    private boolean maximizestate;
    private void maximizebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maximizebtnMouseClicked
        // TODO add your handling code here:
        if (maximizestate) {
            this.setExtendedState(this.NORMAL);

            ImageIcon maximizeicon = new ImageIcon(this.getClass().getResource("../icon/maximize.png"));
            Image logomaximize = maximizeicon.getImage();
            Image scalemaximize = logomaximize.getScaledInstance(15, 15, Image.SCALE_SMOOTH);
            ImageIcon scaledmaximize = new ImageIcon(scalemaximize);
            maximizebtn.setIcon(scaledmaximize);
        } else {
            this.setExtendedState(this.MAXIMIZED_BOTH);

            ImageIcon maximizeicon = new ImageIcon(this.getClass().getResource("../icon/restore.png"));
            Image logomaximize = maximizeicon.getImage();
            Image scalemaximize = logomaximize.getScaledInstance(15, 15, Image.SCALE_SMOOTH);
            ImageIcon scaledmaximize = new ImageIcon(scalemaximize);
            maximizebtn.setIcon(scaledmaximize);
        }
        maximizestate = !maximizestate;
    }//GEN-LAST:event_maximizebtnMouseClicked

    private void maximizebtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maximizebtnMouseEntered
        // TODO add your handling code here:
        maximizebtn.setBackground(new Color(242, 242, 242));
    }//GEN-LAST:event_maximizebtnMouseEntered

    private void maximizebtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maximizebtnMouseExited
        // TODO add your handling code here:
        maximizebtn.setBackground(Color.WHITE);
    }//GEN-LAST:event_maximizebtnMouseExited

    private void minimizebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizebtnMouseClicked
        // TODO add your handling code here:
        this.setExtendedState(this.ICONIFIED);
    }//GEN-LAST:event_minimizebtnMouseClicked

    private void minimizebtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizebtnMouseEntered
        // TODO add your handling code here:
        minimizebtn.setBackground(new Color(242, 242, 242));
    }//GEN-LAST:event_minimizebtnMouseEntered

    private void minimizebtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizebtnMouseExited
        // TODO add your handling code here:
        minimizebtn.setBackground(Color.WHITE);
    }//GEN-LAST:event_minimizebtnMouseExited

    private void oleatolabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_oleatolabelMouseClicked
        // TODO add your handling code here: 
        filteritem("Oleato™");
    }//GEN-LAST:event_oleatolabelMouseClicked

    private void hcoffeelabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hcoffeelabelMouseClicked
        // TODO add your handling code here:
        filteritem("Hot Coffees");
    }//GEN-LAST:event_hcoffeelabelMouseClicked

    private void htealabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_htealabelMouseClicked
        // TODO add your handling code here:
        filteritem("Hot Teas");
    }//GEN-LAST:event_htealabelMouseClicked

    private void hdrinklabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hdrinklabelMouseClicked
        // TODO add your handling code here:        
        filteritem("Hot Drinks");
    }//GEN-LAST:event_hdrinklabelMouseClicked

    private void frappuccinolabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_frappuccinolabelMouseClicked
        // TODO add your handling code here:
        filteritem("Frappuccino® Blended Beverages");
    }//GEN-LAST:event_frappuccinolabelMouseClicked

    private void ccoffeelabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ccoffeelabelMouseClicked
        // TODO add your handling code here:
        filteritem("Cold Coffees");
    }//GEN-LAST:event_ccoffeelabelMouseClicked

    private void itealabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itealabelMouseClicked
        // TODO add your handling code here:
        filteritem("Iced Teas");
    }//GEN-LAST:event_itealabelMouseClicked

    private void cdrinklabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cdrinklabelMouseClicked
        // TODO add your handling code here:
        filteritem("Cold Drinks");
    }//GEN-LAST:event_cdrinklabelMouseClicked

    private void oleatolabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_oleatolabelMouseEntered
        // TODO add your handling code here:
        oleatolabel.setBackground(Color.blue);
        oleatolabel.setForeground(Color.white);
    }//GEN-LAST:event_oleatolabelMouseEntered

    private void oleatolabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_oleatolabelMouseExited
        // TODO add your handling code here:
        oleatolabel.setBackground(Color.decode("#F2F2F2"));
        oleatolabel.setForeground(Color.black);
    }//GEN-LAST:event_oleatolabelMouseExited

    private void hcoffeelabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hcoffeelabelMouseEntered
        // TODO add your handling code here:
        hcoffeelabel.setBackground(Color.blue);
        hcoffeelabel.setForeground(Color.white);
    }//GEN-LAST:event_hcoffeelabelMouseEntered

    private void hcoffeelabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hcoffeelabelMouseExited
        // TODO add your handling code here:
        hcoffeelabel.setBackground(Color.decode("#F2F2F2"));
        hcoffeelabel.setForeground(Color.black);
    }//GEN-LAST:event_hcoffeelabelMouseExited

    private void htealabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_htealabelMouseEntered
        // TODO add your handling code here:
        htealabel.setBackground(Color.blue);
        htealabel.setForeground(Color.white);
    }//GEN-LAST:event_htealabelMouseEntered

    private void htealabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_htealabelMouseExited
        // TODO add your handling code here:
        htealabel.setBackground(Color.decode("#F2F2F2"));
        htealabel.setForeground(Color.black);
    }//GEN-LAST:event_htealabelMouseExited

    private void hdrinklabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hdrinklabelMouseEntered
        // TODO add your handling code here:
        hdrinklabel.setBackground(Color.blue);
        hdrinklabel.setForeground(Color.white);
    }//GEN-LAST:event_hdrinklabelMouseEntered

    private void hdrinklabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hdrinklabelMouseExited
        // TODO add your handling code here:
        hdrinklabel.setBackground(Color.decode("#F2F2F2"));
        hdrinklabel.setForeground(Color.black);
    }//GEN-LAST:event_hdrinklabelMouseExited

    private void frappuccinolabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_frappuccinolabelMouseEntered
        // TODO add your handling code here:
        frappuccinolabel.setBackground(Color.blue);
        frappuccinolabel.setForeground(Color.white);
    }//GEN-LAST:event_frappuccinolabelMouseEntered

    private void frappuccinolabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_frappuccinolabelMouseExited
        // TODO add your handling code here:
        frappuccinolabel.setBackground(Color.decode("#F2F2F2"));
        frappuccinolabel.setForeground(Color.black);
    }//GEN-LAST:event_frappuccinolabelMouseExited

    private void ccoffeelabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ccoffeelabelMouseEntered
        // TODO add your handling code here:
        ccoffeelabel.setBackground(Color.blue);
        ccoffeelabel.setForeground(Color.white);
    }//GEN-LAST:event_ccoffeelabelMouseEntered

    private void ccoffeelabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ccoffeelabelMouseExited
        // TODO add your handling code here:
        ccoffeelabel.setBackground(Color.decode("#F2F2F2"));
        ccoffeelabel.setForeground(Color.black);
    }//GEN-LAST:event_ccoffeelabelMouseExited

    private void itealabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itealabelMouseEntered
        // TODO add your handling code here:
        itealabel.setBackground(Color.blue);
        itealabel.setForeground(Color.white);
    }//GEN-LAST:event_itealabelMouseEntered

    private void itealabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itealabelMouseExited
        // TODO add your handling code here:
        itealabel.setBackground(Color.decode("#F2F2F2"));
        itealabel.setForeground(Color.black);
    }//GEN-LAST:event_itealabelMouseExited

    private void cdrinklabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cdrinklabelMouseEntered
        // TODO add your handling code here:
        cdrinklabel.setBackground(Color.blue);
        cdrinklabel.setForeground(Color.white);
    }//GEN-LAST:event_cdrinklabelMouseEntered

    private void cdrinklabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cdrinklabelMouseExited
        // TODO add your handling code here:
        cdrinklabel.setBackground(Color.decode("#F2F2F2"));
        cdrinklabel.setForeground(Color.black);
    }//GEN-LAST:event_cdrinklabelMouseExited

    private void checkoutbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkoutbtnMouseClicked
        // TODO add your handling code here:
         java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new checkout().setVisible(true);
            }
        });
        
    }//GEN-LAST:event_checkoutbtnMouseClicked

    private void searchboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchboxKeyReleased
        // TODO add your handling code here:
        itemspanel.removeAll();
        itemspanel.revalidate();
        itemspanel.repaint();
        String url = "jdbc:mysql://localhost:3306/possystem?zeroDateTimeBehavior=CONVERT_TO_NULL";
        String user = "root";
        String password = "root";

        try {
            Connection connection = DriverManager.getConnection(url, user, password);

            String searchTerm = searchbox.getText();
            String query = "SELECT * FROM items WHERE name LIKE ?";

            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                preparedStatement.setString(1, "%" + searchTerm + "%");
                ResultSet resultSet = preparedStatement.executeQuery();

                // Process the result set as needed
                while (resultSet.next()) {

                    Integer ID = resultSet.getInt("ID");
                    String itemName = resultSet.getString("name");
                    String itemtype = resultSet.getString("type");
                    String itemtype2 = resultSet.getString("drinktype");
                    String imagePath = resultSet.getString("item_img");
                    Integer baseprice = resultSet.getInt("baseprice");
                    JPanel itemPanel = createItemPanel(itemName, imagePath);
                    itemspanel.add(itemPanel);

                    itemPanel.addMouseListener(new MouseAdapter() {

                        public void mouseClicked(MouseEvent e) {
                            // Handle the click event, 

                            handleItemClick(ID, itemName, imagePath, itemtype, itemtype2, baseprice);

                        }
                    });
                }
            }

        } catch (SQLException ex) {
            Logger.getLogger(posui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchboxKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(posui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(posui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(posui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(posui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //DataHolder dataHolder = new DataHolder();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new posui().setVisible(true);
            }
        });

    }

    public void imageloads() {
        ImageIcon searchicon = new ImageIcon(this.getClass().getResource("../icon/searchicon.png"));
        Image logosearch = searchicon.getImage();
        Image scalesearch = logosearch.getScaledInstance(15, 15, Image.SCALE_SMOOTH);
        ImageIcon scaledsearch = new ImageIcon(scalesearch);
        searchbox.setSuffixIcon(scaledsearch);

        ImageIcon closeicon = new ImageIcon(this.getClass().getResource("../icon/close.png"));
        Image logoclose = closeicon.getImage();
        Image scaleclose = logoclose.getScaledInstance(15, 15, Image.SCALE_SMOOTH);
        ImageIcon scaledclose = new ImageIcon(scaleclose);
        closebtn.setIcon(scaledclose);

        ImageIcon maximizeicon = new ImageIcon(this.getClass().getResource("../icon/maximize.png"));
        Image logomaximize = maximizeicon.getImage();
        Image scalemaximize = logomaximize.getScaledInstance(15, 15, Image.SCALE_SMOOTH);
        ImageIcon scaledmaximize = new ImageIcon(scalemaximize);
        maximizebtn.setIcon(scaledmaximize);

        ImageIcon minimizeicon = new ImageIcon(this.getClass().getResource("../icon/minimize.png"));
        Image logominimize = minimizeicon.getImage();
        Image scaleminimize = logominimize.getScaledInstance(15, 15, Image.SCALE_SMOOTH);
        ImageIcon scaledminimize = new ImageIcon(scaleminimize);
        minimizebtn.setIcon(scaledminimize);
    }

    private void fetchItemsAndCreatePanels() {
        // JDBC connection parameters
        String url = "jdbc:mysql://localhost:3306/possystem?zeroDateTimeBehavior=CONVERT_TO_NULL";
        String user = "root";
        String password = "root";

        try {
            Connection connection = DriverManager.getConnection(url, user, password);
            String query = "SELECT * FROM items";
            try (PreparedStatement preparedStatement = connection.prepareStatement(query); ResultSet resultSet = preparedStatement.executeQuery()) {
                while (resultSet.next()) {
                    // Get item details from the result set
                    Integer ID = resultSet.getInt("ID");
                    String itemName = resultSet.getString("name");
                    String itemtype = resultSet.getString("type");
                    String itemtype2 = resultSet.getString("drinktype");
                    String imagePath = resultSet.getString("item_img");
                    Integer baseprice = resultSet.getInt("baseprice");

                    // Create a panel for each item  
                    JPanel itemPanel = createItemPanel(itemName, imagePath);
                    itemspanel.add(itemPanel);

                    itemPanel.addMouseListener(new MouseAdapter() {

                        public void mouseClicked(MouseEvent e) {
                            // Handle the click event, 

                            handleItemClick(ID, itemName, imagePath, itemtype, itemtype2, baseprice);

                        }
                    });
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private JPanel createItemPanel(String itemName, String imagePath) {
        JPanel itemPanel = new JPanel();
        itemPanel.setLayout(new FlowLayout(FlowLayout.LEADING));
        itemPanel.setPreferredSize(new Dimension(150, 150));
        itemPanel.setBorder(BorderFactory.createLineBorder(Color.GRAY));

        // JLabel for item image
        JLabel imageLabel = new JLabel();
        ImageIcon itemimg = new ImageIcon(getClass().getResource("../images/" + imagePath));
        Image logoitem = itemimg.getImage();
        Image scaleitem = logoitem.getScaledInstance(120, 137, Image.SCALE_SMOOTH);
        ImageIcon scaleditem = new ImageIcon(scaleitem);
        imageLabel.setIcon(scaleditem);
        itemPanel.add(imageLabel);

        // JLabel for item name
        JLabel nameLabel = new JLabel("<html>" + itemName + "</html>");
        nameLabel.setPreferredSize(new Dimension(300, 70));
        nameLabel.setOpaque(true);
        itemPanel.add(nameLabel);

        return itemPanel;
    }

    private void handleItemClick(Integer ID, String itemName, String imagePath, String itemtype, String itemtype2, Integer baseprice) {
        DataHolder dataHolder = new DataHolder();
        dataHolder.setData(ID, itemName, imagePath, itemtype, itemtype2, baseprice);

        itemselect itemSelect = new itemselect();
        itemSelect.dataload(dataHolder);
        itemSelect.setVisible(true);

    }

    private void filteritem(String filteritemname) {
        itemspanel.removeAll();
        itemspanel.repaint();

        String url = "jdbc:mysql://localhost:3306/possystem?zeroDateTimeBehavior=CONVERT_TO_NULL";
        String user = "root";
        String password = "root";

        try {
            Connection connection = DriverManager.getConnection(url, user, password);
            String query = "SELECT * FROM items";
            try (PreparedStatement preparedStatement = connection.prepareStatement(query); ResultSet resultSet = preparedStatement.executeQuery()) {
                while (resultSet.next()) {
                    // Get item details from the result set
                    Integer ID = resultSet.getInt("ID");
                    String itemName = resultSet.getString("name");
                    String imagePath = resultSet.getString("item_img");
                    String itemtype = resultSet.getString("type");
                    String itemtype2 = resultSet.getString("drinktype");
                    Integer baseprice = resultSet.getInt("baseprice");

                    // Create a panel for each item
                    if (itemtype2.equals(filteritemname)) {
                        JPanel itemPanel = createItemPanel(itemName, imagePath);
                        itemspanel.add(itemPanel);
                        itemPanel.addMouseListener(new MouseAdapter() {
                            @Override
                            public void mouseClicked(MouseEvent e) {
                                // Handle the click event, 
                                handleItemClick(ID, itemName, imagePath, itemtype, itemtype2, baseprice);
                            }
                        });
                    }
                }
            }
            itemspanel.revalidate();
            itemspanel.repaint();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ccoffeelabel;
    private javax.swing.JLabel cdrinklabel;
    private customframework.Button checkoutbtn;
    private javax.swing.JLabel closebtn;
    private javax.swing.JLabel frappuccinolabel;
    private javax.swing.JLabel hcoffeelabel;
    private javax.swing.JLabel hdrinklabel;
    private javax.swing.JLabel htealabel;
    private javax.swing.JLabel itealabel;
    private javax.swing.JPanel itemspanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel maximizebtn;
    private javax.swing.JLabel minimizebtn;
    private javax.swing.JLabel oleatolabel;
    private customframework.PanelRound panelRound1;
    private customframework.MyTextField searchbox;
    // End of variables declaration//GEN-END:variables
}
