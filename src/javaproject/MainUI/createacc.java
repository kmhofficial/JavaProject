/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaproject.MainUI;

import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.SwingWorker;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author L3gend
 */
public class createacc extends javax.swing.JFrame {

    /**
     * Creates new form createacc
     */
    public createacc() {
        initComponents();
        load();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRound1 = new customframework.PanelRound();
        displayimagelabel = new javax.swing.JLabel();
        imgchoosebtn = new customframework.Button();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        namebox = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        usrnamebox = new javax.swing.JTextField();
        passbox = new javax.swing.JTextField();
        locationbox = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        phnumbox = new javax.swing.JTextField();
        deletebtn = new customframework.Button();
        updatebtn = new customframework.Button();
        createaccbtn = new customframework.Button();
        backbtn = new customframework.Button();
        progressBar = new customframework.ProgressBarCustom();
        typebox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        imgchoosebtn.setBackground(new java.awt.Color(0, 0, 255));
        imgchoosebtn.setForeground(new java.awt.Color(255, 255, 255));
        imgchoosebtn.setText("Choose Image");
        imgchoosebtn.setFocusable(false);
        imgchoosebtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        imgchoosebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imgchoosebtnMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Name -");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Password -");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Username -");

        namebox.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        namebox.setToolTipText("");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Location -");

        usrnamebox.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        usrnamebox.setToolTipText("");

        passbox.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        passbox.setToolTipText("");

        locationbox.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        locationbox.setToolTipText("");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Ph num -");

        phnumbox.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        deletebtn.setBackground(new java.awt.Color(255, 0, 51));
        deletebtn.setForeground(new java.awt.Color(255, 255, 255));
        deletebtn.setText("Delete");
        deletebtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        deletebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletebtnMouseClicked(evt);
            }
        });

        updatebtn.setBackground(new java.awt.Color(51, 153, 0));
        updatebtn.setForeground(new java.awt.Color(255, 255, 255));
        updatebtn.setText("Update");
        updatebtn.setFocusable(false);
        updatebtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        updatebtn.setPreferredSize(new java.awt.Dimension(64, 21));
        updatebtn.setRequestFocusEnabled(false);
        updatebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatebtnMouseClicked(evt);
            }
        });

        createaccbtn.setBackground(new java.awt.Color(51, 153, 0));
        createaccbtn.setForeground(new java.awt.Color(255, 255, 255));
        createaccbtn.setText("Create");
        createaccbtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        createaccbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createaccbtnMouseClicked(evt);
            }
        });

        backbtn.setBackground(new java.awt.Color(0, 0, 204));
        backbtn.setForeground(new java.awt.Color(255, 255, 255));
        backbtn.setText("Back");
        backbtn.setFocusable(false);
        backbtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        backbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backbtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(namebox, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                            .addComponent(usrnamebox)
                            .addComponent(passbox)
                            .addComponent(locationbox)
                            .addComponent(phnumbox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(createaccbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updatebtn, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                            .addComponent(deletebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(backbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(namebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(usrnamebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(createaccbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(passbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(locationbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phnumbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addComponent(backbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7))
        );

        typebox.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        typebox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Account Type", "Owner", "Staff" }));

        javax.swing.GroupLayout panelRound1Layout = new javax.swing.GroupLayout(panelRound1);
        panelRound1.setLayout(panelRound1Layout);
        panelRound1Layout.setHorizontalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(displayimagelabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(typebox, 0, 111, Short.MAX_VALUE)
                    .addComponent(imgchoosebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelRound1Layout.setVerticalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelRound1Layout.createSequentialGroup()
                        .addComponent(typebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(displayimagelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(imgchoosebtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelRound1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelRound1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private File selectedFile;
    public String imageName;
    public Integer ID;
    
    private void imgchoosebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imgchoosebtnMouseClicked
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image Files", "jpg", "jpeg", "png", "gif");
        fileChooser.setFileFilter(filter);

        int result = fileChooser.showOpenDialog(null);

        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile(); // Capture the selected file
            displayImage(selectedFile); // Display the selected image
        }
    }

    private void displayImage(File file) {
        ImageIcon itemimg = new ImageIcon(file.getPath());
        Image logoitem = itemimg.getImage();
        Image scaleitem = logoitem.getScaledInstance(displayimagelabel.getWidth(), displayimagelabel.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon scaleditem = new ImageIcon(scaleitem);
        displayimagelabel.setIcon(scaleditem);
    }

    private static void moveImageToFile(Path sourcePath, String outputDirectory, String imageName) throws IOException {
        Path destinationPath = Paths.get(outputDirectory, imageName);
        Files.copy(sourcePath, destinationPath, StandardCopyOption.REPLACE_EXISTING);
    }//GEN-LAST:event_imgchoosebtnMouseClicked

    private void createaccbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createaccbtnMouseClicked
        // TODO add your handling code here:
        fill();
    }//GEN-LAST:event_createaccbtnMouseClicked

    private void backbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backbtnMouseClicked
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_backbtnMouseClicked

    
    private void updatebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebtnMouseClicked
        // TODO add your handling code here:
        String url = "jdbc:mysql://localhost:3306/possystem?zeroDateTimeBehavior=CONVERT_TO_NULL";
        String user = "root";
        String password = "root";
        try {
            Connection connection = DriverManager.getConnection(url, user, password);
            String query = "UPDATE users SET username = ?, name = ?, type = ?,password =?,phnum =?,location =?,profileimg =? WHERE ID = ?";
            PreparedStatement preparestatement = connection.prepareStatement(query);
            preparestatement.setString(1, usrnamebox.getText());
            preparestatement.setString(2, namebox.getText());
            preparestatement.setString(3, typebox.getSelectedItem().toString());
            preparestatement.setString(4, passbox.getText());
            preparestatement.setString(5, phnumbox.getText());
            preparestatement.setString(6, locationbox.getText());
            if(selectedFile != null){
                imageName = selectedFile.getName();
            String outputDirectory = "C:\\Users\\L3gend\\Desktop\\java apache\\JavaProject\\src\\javaproject\\profileimg";
            try {
                moveImageToFile(selectedFile.toPath(), outputDirectory, imageName);
            } catch (IOException ex) {
                Logger.getLogger(createacc.class.getName()).log(Level.SEVERE, null, ex);
            }
                preparestatement.setString(7, imageName);
                System.out.println(imageName);
            }else{
                preparestatement.setString(7, imageName);
                            System.out.println("no img");
            }
            
            preparestatement.setInt(8, ID);
            preparestatement.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_updatebtnMouseClicked

    private void deletebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletebtnMouseClicked
        // TODO add your handling code here:

        String url = "jdbc:mysql://localhost:3306/possystem?zeroDateTimeBehavior=CONVERT_TO_NULL";
        String user = "root";
        String password = "root";
        try {
            Connection connection = DriverManager.getConnection(url, user, password);
            String query = "Delete from users where ID = ?";
            PreparedStatement preparestatement = connection.prepareStatement(query);
            preparestatement.setInt(1, ID);
            preparestatement.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_deletebtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(createacc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(createacc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(createacc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(createacc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new createacc().setVisible(true);
            }
        });
    }

    public void dataload(DataHolder dataHolder) {
        
        ID = dataHolder.getIDdata();
        
        load();
        
        namebox.setText(dataHolder.getnamedata());
        usrnamebox.setText(dataHolder.getusernamedata());
        passbox.setText(dataHolder.getpassworddata());
        locationbox.setText(dataHolder.getlocationdata());
        phnumbox.setText(dataHolder.getphnumdata());
        imageName = dataHolder.getprofileimgdata();
        
        ImageIcon closeicon = new ImageIcon(this.getClass().getResource("../profileimg/" + dataHolder.getprofileimgdata()));
        Image profileimg = closeicon.getImage();
        Image scaleprofile = profileimg.getScaledInstance(displayimagelabel.getWidth(), displayimagelabel.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon scaledprofile = new ImageIcon(scaleprofile);
        displayimagelabel.setIcon(scaledprofile);

        typebox.setSelectedItem(dataHolder.getacctypedata());
    }

    private void fill() {
        SwingWorker<Void, Integer> worker = new SwingWorker<>() {
            @Override
            protected Void doInBackground() throws Exception {
                for (int i = 0; i <= 101; i++) {
                    Thread.sleep(10);
                    publish(i);
                }
                return null;
            }

            @Override
            protected void process(List<Integer> chunks) {
                int progressValue = chunks.get(chunks.size() - 1);
                System.out.println(progressValue);
                progressBar.setValue(progressValue);
            }

            @Override
            protected void done() {
                
                String imageName = selectedFile.getName();
                
                String outputDirectory = "C:\\Users\\L3gend\\Desktop\\java apache\\JavaProject\\src\\javaproject\\profileimg";
                try {
                    moveImageToFile(selectedFile.toPath(), outputDirectory, imageName);
                } catch (IOException ex) {
                }
                String url = "jdbc:mysql://localhost:3306/possystem?zeroDateTimeBehavior=CONVERT_TO_NULL";
                String user = "root";
                String password = "root";
                try {
                    Connection connection = DriverManager.getConnection(url, user, password);
                    String query = "Insert into users (name,username,password,type,joined_date,phnum,location,profileimg)values(?,?,?,?,?,?,?,?)";
                    PreparedStatement preparedStatement = connection.prepareStatement(query);
                    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                    LocalDateTime now = LocalDateTime.now();
                    preparedStatement.setString(1, namebox.getText());
                    preparedStatement.setString(2, usrnamebox.getText());
                    preparedStatement.setString(3, passbox.getText());
                    preparedStatement.setString(4, typebox.getSelectedItem().toString());
                    preparedStatement.setString(5, dtf.format(now));
                    preparedStatement.setString(6, phnumbox.getText());
                    preparedStatement.setString(7, locationbox.getText());
                    preparedStatement.setString(8, imageName);
                    int insertdata = preparedStatement.executeUpdate();
                    dispose();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        };
        worker.execute();
    }
    public void load(){
        if(ID != null){
            createaccbtn.setVisible(false);
        }else{
            createaccbtn.setVisible(true);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private customframework.Button backbtn;
    private customframework.Button createaccbtn;
    private customframework.Button deletebtn;
    private javax.swing.JLabel displayimagelabel;
    private customframework.Button imgchoosebtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField locationbox;
    private javax.swing.JTextField namebox;
    private customframework.PanelRound panelRound1;
    private javax.swing.JTextField passbox;
    private javax.swing.JTextField phnumbox;
    private customframework.ProgressBarCustom progressBar;
    private javax.swing.JComboBox<String> typebox;
    private customframework.Button updatebtn;
    private javax.swing.JTextField usrnamebox;
    // End of variables declaration//GEN-END:variables
}
