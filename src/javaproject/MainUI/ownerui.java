/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaproject.MainUI;

import java.sql.PreparedStatement;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author L3GEND
 */
public class ownerui extends javax.swing.JFrame {

    /**
     * Creates new form ownerui
     */
    public ownerui() {
        initComponents();
        Imageicons();
        this.setBackground(new Color(0.0f, 0.0f, 0.0f, 0.0f));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRound1 = new customframework.PanelRound();
        jPanel1 = new javax.swing.JPanel();
        logolabel = new javax.swing.JLabel();
        userbtn = new customframework.Button();
        itemsbtn = new customframework.Button();
        salehistorybtn = new customframework.Button();
        closebtn = new javax.swing.JLabel();
        maximizebtn = new javax.swing.JLabel();
        minimizebtn = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        infopanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        createaccbtn = new customframework.Button();
        additembtn = new customframework.Button();
        jLabel1 = new javax.swing.JLabel();
        refresh = new customframework.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        panelRound1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(0, 0, 102));
        jPanel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N

        logolabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        logolabel.setForeground(new java.awt.Color(255, 255, 255));
        logolabel.setText("Starbuck");
        logolabel.setToolTipText("");

        userbtn.setText("Users");
        userbtn.setFocusable(false);
        userbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userbtnMouseClicked(evt);
            }
        });

        itemsbtn.setText("Items");
        itemsbtn.setFocusable(false);
        itemsbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemsbtnMouseClicked(evt);
            }
        });

        salehistorybtn.setText("Sale History");
        salehistorybtn.setFocusable(false);
        salehistorybtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salehistorybtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(itemsbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(userbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(salehistorybtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(logolabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(logolabel)
                .addGap(50, 50, 50)
                .addComponent(userbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(itemsbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(salehistorybtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(145, Short.MAX_VALUE))
        );

        closebtn.setBackground(new java.awt.Color(255, 255, 255));
        closebtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        closebtn.setFocusable(false);
        closebtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        closebtn.setOpaque(true);
        closebtn.setPreferredSize(new java.awt.Dimension(400, 300));
        closebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closebtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closebtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closebtnMouseExited(evt);
            }
        });

        maximizebtn.setBackground(new java.awt.Color(255, 255, 255));
        maximizebtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        maximizebtn.setOpaque(true);
        maximizebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                maximizebtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                maximizebtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                maximizebtnMouseExited(evt);
            }
        });

        minimizebtn.setBackground(new java.awt.Color(255, 255, 255));
        minimizebtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimizebtn.setOpaque(true);
        minimizebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizebtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizebtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizebtnMouseExited(evt);
            }
        });

        infopanel.setLayout(new java.awt.GridLayout(0, 3, 1, 1));
        jScrollPane1.setViewportView(infopanel);

        createaccbtn.setBackground(new java.awt.Color(0, 0, 255));
        createaccbtn.setForeground(new java.awt.Color(255, 255, 255));
        createaccbtn.setText("Create Account");
        createaccbtn.setToolTipText("");
        createaccbtn.setFocusable(false);
        createaccbtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        createaccbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createaccbtnMouseClicked(evt);
            }
        });

        additembtn.setBackground(new java.awt.Color(0, 0, 255));
        additembtn.setForeground(new java.awt.Color(255, 255, 255));
        additembtn.setText("Add items");
        additembtn.setFocusable(false);
        additembtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        additembtn.setPreferredSize(new java.awt.Dimension(96, 27));
        additembtn.setRequestFocusEnabled(false);
        additembtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                additembtnMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Settings");

        refresh.setBackground(new java.awt.Color(0, 51, 255));
        refresh.setForeground(new java.awt.Color(255, 255, 255));
        refresh.setText("Refresh");
        refresh.setFocusable(false);
        refresh.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        refresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(additembtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(createaccbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(refresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(createaccbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(additembtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelRound1Layout = new javax.swing.GroupLayout(panelRound1);
        panelRound1.setLayout(panelRound1Layout);
        panelRound1Layout.setHorizontalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 743, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelRound1Layout.createSequentialGroup()
                        .addComponent(minimizebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maximizebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelRound1Layout.setVerticalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelRound1Layout.createSequentialGroup()
                        .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(closebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(maximizebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(minimizebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelRound1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelRound1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closebtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closebtnMouseEntered
        // TODO add your handling code here:
        closebtn.setBackground(new Color(220, 0, 0, 255));

        ImageIcon closeicon = new ImageIcon(this.getClass().getResource("../icon/whiteclose.png"));
        Image logoclose = closeicon.getImage();
        Image scaleclose = logoclose.getScaledInstance(15, 15, Image.SCALE_SMOOTH);
        ImageIcon scaledclose = new ImageIcon(scaleclose);
        closebtn.setIcon(scaledclose);

    }//GEN-LAST:event_closebtnMouseEntered

    private void closebtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closebtnMouseExited
        // TODO add your handling code here:
        closebtn.setBackground(Color.WHITE);

        ImageIcon closeicon = new ImageIcon(this.getClass().getResource("../icon/close.png"));
        Image logoclose = closeicon.getImage();
        Image scaleclose = logoclose.getScaledInstance(15, 15, Image.SCALE_SMOOTH);
        ImageIcon scaledclose = new ImageIcon(scaleclose);
        closebtn.setIcon(scaledclose);
    }//GEN-LAST:event_closebtnMouseExited

    private void closebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closebtnMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closebtnMouseClicked

    private void maximizebtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maximizebtnMouseEntered
        // TODO add your handling code here:
        maximizebtn.setBackground(new Color(242, 242, 242));
    }//GEN-LAST:event_maximizebtnMouseEntered

    private void maximizebtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maximizebtnMouseExited
        // TODO add your handling code here:
        maximizebtn.setBackground(Color.WHITE);
    }//GEN-LAST:event_maximizebtnMouseExited

    private void minimizebtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizebtnMouseEntered
        // TODO add your handling code here:
        minimizebtn.setBackground(new Color(242, 242, 242));
    }//GEN-LAST:event_minimizebtnMouseEntered

    private void minimizebtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizebtnMouseExited
        // TODO add your handling code here:
        minimizebtn.setBackground(Color.WHITE);
    }//GEN-LAST:event_minimizebtnMouseExited

    private boolean maximizestate;

    private void maximizebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maximizebtnMouseClicked
        // TODO add your handling code here:
        if (maximizestate) {
            this.setExtendedState(this.NORMAL);

            ImageIcon maximizeicon = new ImageIcon(this.getClass().getResource("../icon/maximize.png"));
            Image logomaximize = maximizeicon.getImage();
            Image scalemaximize = logomaximize.getScaledInstance(15, 15, Image.SCALE_SMOOTH);
            ImageIcon scaledmaximize = new ImageIcon(scalemaximize);
            maximizebtn.setIcon(scaledmaximize);
        } else {
            this.setExtendedState(this.MAXIMIZED_BOTH);

            ImageIcon maximizeicon = new ImageIcon(this.getClass().getResource("../icon/restore.png"));
            Image logomaximize = maximizeicon.getImage();
            Image scalemaximize = logomaximize.getScaledInstance(15, 15, Image.SCALE_SMOOTH);
            ImageIcon scaledmaximize = new ImageIcon(scalemaximize);
            maximizebtn.setIcon(scaledmaximize);
        }
        maximizestate = !maximizestate;
    }//GEN-LAST:event_maximizebtnMouseClicked

    private void minimizebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizebtnMouseClicked
        // TODO add your handling code here:
        this.setExtendedState(this.ICONIFIED);
    }//GEN-LAST:event_minimizebtnMouseClicked

    public boolean userinfo;
    public boolean iteminfo;
    public String query;

    private void userbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userbtnMouseClicked
        // TODO add your handling code here:
        infopanel.removeAll();
        userinfo = true;
        iteminfo = false;
        query = "SELECT * FROM users;";
        getdata(query);
        infopanel.revalidate();
        infopanel.repaint();
    }//GEN-LAST:event_userbtnMouseClicked

    private void createaccbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createaccbtnMouseClicked
        // TODO add your handling code here:
        
        createacc cacc = new createacc();
        cacc.setVisible(true);
    }//GEN-LAST:event_createaccbtnMouseClicked

    private void itemsbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemsbtnMouseClicked
        // TODO add your handling code here:
        infopanel.removeAll();
        userinfo = false;
        iteminfo = true;
        query = "SELECT * FROM items;";
        getdata(query);
        infopanel.revalidate();
        infopanel.repaint();
    }//GEN-LAST:event_itemsbtnMouseClicked

    private void refreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshMouseClicked
        // TODO add your handling code here:
        infopanel.removeAll();
        getdata(query);
        infopanel.revalidate();
        infopanel.repaint();
    }//GEN-LAST:event_refreshMouseClicked

    private void additembtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_additembtnMouseClicked
        // TODO add your handling code here:
        itemedit iedit = new itemedit();        
        iedit.setVisible(true);
    }//GEN-LAST:event_additembtnMouseClicked

    private void salehistorybtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salehistorybtnMouseClicked
        // TODO add your handling code here:
        infopanel.removeAll();
        userinfo = false;
        iteminfo = false;
        query = "Select * from salehistory";
        getdata(query);
        infopanel.revalidate();
        infopanel.repaint();
    }//GEN-LAST:event_salehistorybtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ownerui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ownerui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ownerui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ownerui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ownerui().setVisible(true);
            }
        });
    }

    public void Imageicons() {
        ImageIcon logo = new ImageIcon(this.getClass().getResource("../icon/logo.png"));
        Image logoicon = logo.getImage();
        Image scalelogo = logoicon.getScaledInstance(35, 35, Image.SCALE_SMOOTH);
        ImageIcon scaledlogo = new ImageIcon(scalelogo);
        logolabel.setIcon(scaledlogo);

        ImageIcon usericon = new ImageIcon(this.getClass().getResource("../icon/user.png"));
        Image logouser = usericon.getImage();
        Image scaleuser = logouser.getScaledInstance(35, 35, Image.SCALE_SMOOTH);
        ImageIcon scaleduser = new ImageIcon(scaleuser);
        userbtn.setIcon(scaleduser);

        ImageIcon itemicon = new ImageIcon(this.getClass().getResource("../icon/starbuckitem.png"));
        Image logoitem = itemicon.getImage();
        Image scaleitem = logoitem.getScaledInstance(35, 35, Image.SCALE_SMOOTH);
        ImageIcon scaleditem = new ImageIcon(scaleitem);
        itemsbtn.setIcon(scaleditem);

        ImageIcon saleicon = new ImageIcon(this.getClass().getResource("../icon/salechart.png"));
        Image logosale = saleicon.getImage();
        Image scalesale = logosale.getScaledInstance(35, 35, Image.SCALE_SMOOTH);
        ImageIcon scaledsale = new ImageIcon(scalesale);
        salehistorybtn.setIcon(scaledsale);

        ImageIcon closeicon = new ImageIcon(this.getClass().getResource("../icon/close.png"));
        Image logoclose = closeicon.getImage();
        Image scaleclose = logoclose.getScaledInstance(15, 15, Image.SCALE_SMOOTH);
        ImageIcon scaledclose = new ImageIcon(scaleclose);
        closebtn.setIcon(scaledclose);

        ImageIcon maximizeicon = new ImageIcon(this.getClass().getResource("../icon/maximize.png"));
        Image logomaximize = maximizeicon.getImage();
        Image scalemaximize = logomaximize.getScaledInstance(15, 15, Image.SCALE_SMOOTH);
        ImageIcon scaledmaximize = new ImageIcon(scalemaximize);
        maximizebtn.setIcon(scaledmaximize);

        ImageIcon minimizeicon = new ImageIcon(this.getClass().getResource("../icon/minimize.png"));
        Image logominimize = minimizeicon.getImage();
        Image scaleminimize = logominimize.getScaledInstance(15, 15, Image.SCALE_SMOOTH);
        ImageIcon scaledminimize = new ImageIcon(scaleminimize);
        minimizebtn.setIcon(scaledminimize);
    }

    public void getdata(String query) {
        String url = "jdbc:mysql://localhost:3306/possystem?zeroDateTimeBehavior=CONVERT_TO_NULL";
        String user = "root";
        String password = "root";

        try {
            Connection connection = DriverManager.getConnection(url, user, password);

            try (PreparedStatement preparedStatement = connection.prepareStatement(query); ResultSet resultSet = preparedStatement.executeQuery()) {
                while (resultSet.next()) {
                    if (userinfo == true) {
                        Integer ID = resultSet.getInt("ID");
                        String Name = resultSet.getString("name");
                        String username = resultSet.getString("username");
                        String type = resultSet.getString("type");
                        String imagePath = resultSet.getString("profileimg");
                        String pass = resultSet.getString("password");
                        String joindate = resultSet.getString("joined_date");
                        String phnum = resultSet.getString("phnum");
                        String location = resultSet.getString("location");

                        // Create a panel for each item  
                        JPanel itemPanel = createUserPanel(Name, imagePath);
                        infopanel.add(itemPanel);

                        itemPanel.addMouseListener(new MouseAdapter() {
                            public void mouseClicked(MouseEvent e) {
                                // Handle the click event, 
                                handleUserClick(ID,Name, imagePath, username, type,pass,joindate,phnum,location);
                                
                            }
                        }); 
                    }else if(iteminfo==true){
                        Integer ID = resultSet.getInt("ID");
                        String itemname = resultSet.getString("name");            
                        String type = resultSet.getString("type");
                        String itemtype1 = resultSet.getString("drinktype");
                        String itemtype2 = resultSet.getString("foodtype");
                        String imagePath = resultSet.getString("item_img");
                        Integer baseprice = resultSet.getInt("baseprice");
                        String qty = resultSet.getString("qty");
                        
                        // Create a panel for each item  
                        JPanel itemPanel = createItemPanel(itemname, imagePath);
                        infopanel.add(itemPanel);

                        itemPanel.addMouseListener(new MouseAdapter() {
                            public void mouseClicked(MouseEvent e) {
                                // Handle the click event, 
                                handleItemClick(ID, itemname, imagePath, itemtype1, itemtype2,baseprice);

                            }
                        }); 
                    }else{
                        Integer ID = resultSet.getInt("id");
                        String name = resultSet.getString("itemname");
                        Integer itemshort = resultSet.getInt("short");
                        Integer itemtall = resultSet.getInt("tall");
                        Integer itemgrande = resultSet.getInt("grande");
                        Integer itemventi = resultSet.getInt("venti");
                        Integer totalquantity = resultSet.getInt("totalsalequantity");
                        Integer totalsale = resultSet.getInt("totalsale");
                        
                        JPanel itemPanel = createSalePanel(name);
                        infopanel.add(itemPanel);
                        
                    }

                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private JPanel createUserPanel(String Name, String imagePath) {
        JPanel itemPanel = new JPanel();
        itemPanel.setLayout(new FlowLayout(FlowLayout.LEADING));
        itemPanel.setPreferredSize(new Dimension(220, 110));     

        // JLabel for item image
        JLabel imageLabel = new JLabel();
        ImageIcon itemimg = new ImageIcon(getClass().getResource("../profileimg/" + imagePath));
        Image logoitem = itemimg.getImage();
        Image scaleitem = logoitem.getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon scaleditem = new ImageIcon(scaleitem);
        imageLabel.setIcon(scaleditem);
        itemPanel.add(imageLabel);

        // JLabel for item name
        JLabel nameLabel = new JLabel("<html>" + Name + "</html>");
        nameLabel.setPreferredSize(new Dimension(120, 70));
        nameLabel.setOpaque(true);
        itemPanel.add(nameLabel);

        return itemPanel;
    }

    private JPanel createItemPanel(String Name, String imagePath) {
        JPanel itemPanel = new JPanel();
        itemPanel.setLayout(new FlowLayout(FlowLayout.LEADING));
        itemPanel.setPreferredSize(new Dimension(200, 110));
        itemPanel.setBorder(BorderFactory.createLineBorder(Color.BLUE));

        // JLabel for item image
        JLabel imageLabel = new JLabel();
        ImageIcon itemimg = new ImageIcon(getClass().getResource("../images/" + imagePath));
        Image logoitem = itemimg.getImage();
        Image scaleitem = logoitem.getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon scaleditem = new ImageIcon(scaleitem);
        imageLabel.setIcon(scaleditem);
        itemPanel.add(imageLabel);

        // JLabel for item name
        JLabel nameLabel = new JLabel("<html>" + Name + "</html>");
        nameLabel.setPreferredSize(new Dimension(100, 70));
        nameLabel.setOpaque(true);
        itemPanel.add(nameLabel);

        return itemPanel;
    }
    private JPanel createSalePanel(String Name) {
        JPanel itemPanel = new JPanel();
        itemPanel.setLayout(new FlowLayout(FlowLayout.LEADING));
        itemPanel.setPreferredSize(new Dimension(200, 110));
        itemPanel.setBorder(BorderFactory.createLineBorder(Color.BLUE));

        // JLabel for item name
        JLabel nameLabel = new JLabel("<html>" + Name + "</html>");
        nameLabel.setPreferredSize(new Dimension(100, 70));
        nameLabel.setOpaque(true);
        
        
        itemPanel.add(nameLabel);

        return itemPanel;
    }
    private void handleUserClick(Integer ID,String Name, String imagePath, String username, String type,String pass,String date,String phnum,String location ) {
        DataHolder dataHolder = new DataHolder();
        dataHolder.setuserData(ID,username, Name, imagePath, type,pass,date,phnum,location);
        userinfo usrinfo = new userinfo();
        usrinfo.dataload(dataHolder);
        usrinfo.setVisible(true);
    }
    private void handleItemClick(Integer ID,String itemNamedata, String itemImgdata, String itemtype, String itemtype2,Integer baseprice) {
        DataHolder dataHolder = new DataHolder();
        dataHolder.setData(ID,itemNamedata, itemImgdata, itemtype, itemtype2,baseprice);
        itemedit iedit = new itemedit();
        iedit.dataload(dataHolder);
        iedit.setVisible(true);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private customframework.Button additembtn;
    private javax.swing.JLabel closebtn;
    private customframework.Button createaccbtn;
    private javax.swing.JPanel infopanel;
    private customframework.Button itemsbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel logolabel;
    private javax.swing.JLabel maximizebtn;
    private javax.swing.JLabel minimizebtn;
    private customframework.PanelRound panelRound1;
    private customframework.Button refresh;
    private customframework.Button salehistorybtn;
    private customframework.Button userbtn;
    // End of variables declaration//GEN-END:variables
}
